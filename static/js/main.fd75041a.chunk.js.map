{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","ct","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","pointer","Contacts","deleteContact","newContacts","el","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","match","params","TextInputGroup","_ref","label","placeholder","onChange","errors","htmlFor","classnames","is-invalid","AddContact","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","put","console","log","NotFound","Test","title","body","fetch","then","json","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd75041a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT': \r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_CONTACT': \r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map((ct) => ct.id === action.payload.id ? (ct = action.payload) : ct)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n   \r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({\r\n            contacts: res.data\r\n        })        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n//so in other components just use <Consumer> for accessing the Context!\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  }\r\n\r\n  //only due to jsonplaceholders.. cant do a request for a person that is created\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }catch(e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const {showContactInfo} = this.state\r\n    \r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          \r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} \r\n                <i \r\n                  onClick={this.onShowClick} \r\n                  className=\"fas fa-sort-down ml-3\"\r\n                  style={{cursor: 'pointer'}}>\r\n                </i>\r\n                \r\n                <i className=\"fas fa-times\" \r\n                  style={{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}>\r\n                </i>\r\n                \r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt mr-2\"\r\n                     style={{pointer: 'cursor', float: 'right', color: 'black'}}>\r\n\r\n                  </i>\r\n                </Link>\r\n          \r\n              </h4>\r\n              {showContactInfo ?\r\n              <ul className=\"list-group\">\r\n                  <li className=\"list-group-item mb-1\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n              </ul>\r\n              : null }\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  deleteContact = (id) => {\r\n      const { contacts } = this.state;\r\n\r\n      let newContacts = [];\r\n      newContacts = contacts.filter((el) => el.id !== id);\r\n\r\n      this.setState({\r\n        contacts: newContacts\r\n      });\r\n    }\r\n\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => { \r\n          const { contacts } = value;\r\n\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\"> \r\n              <span className=\"text-danger\">Contact</span> List</h1>\r\n              \r\n              {contacts.map((ct) => (\r\n                <Contact \r\n                  key={ct.id}\r\n                  contact={ct}\r\n                />\r\n              ))} \r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n\r\n  return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\"> <i className=\"fas fa-home\"></i> Home </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>  Add Contacts </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>  About </Link>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n};\r\n\r\n//Default-Werte, sollten keine props übergeben werden\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">{props.match.params.id}</h1>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\"> Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, errors }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}> {label} </label>\r\n        <input \r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control corm-control-lg', {'is-invalid': errors})}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n        {errors && <div className=\"invalid-feedback\">{errors}</div>}\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state =  {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({\r\n                errors: {name: 'Name is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors: {phone: 'Phone is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({\r\n                errors: {email: 'Email is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n            errors: {}\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n  render() {\r\n    const { name, email, phone, errors} = this.state;\r\n    \r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                \r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.name}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.email}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Add Contract\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state =  {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        const {name, email, phone } = res.data;\r\n\r\n        this.setState({\r\n            name,\r\n            email,\r\n            phone\r\n        })\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({\r\n                errors: {name: 'Name is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors: {phone: 'Phone is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({\r\n                errors: {email: 'Email is undefined!'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        let updContact = {\r\n            name,\r\n            phone,\r\n            email \r\n        }\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n  render() {\r\n    const { name, email, phone, errors} = this.state;\r\n    \r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                \r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.name}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.email}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    errors={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Update Contract\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page not found</span></h1>\r\n      <p className=\"lead\">Sorry, that page does not exist!</p>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { deprecate } from 'util';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n //do fetch calls, http requests etc. putting into component state\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(res => res.json())\r\n    .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n    }));\r\n     \r\n  }\r\n /* \r\n  //runs before did mount!\r\n  //DEPRECATED\r\n  componentWillMount() {\r\n      console.log('will mount...')\r\n  }\r\n\r\n  componentDidUpdate() {\r\n      console.log('updated!');\r\n  }\r\n\r\n  //DEPRECATED\r\n  componentWillUpdate() {\r\n        console.log(' will updated ...');\r\n  }\r\n  \r\n  //DEPRECATED\r\n  componentWillReceiveProps(nextProps, nextState){\r\n    console.log(' will receive props ...');\r\n  }\r\n\r\n  //alternative zu willReceiveProps\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n    return null;\r\n  }\r\n\r\n  //fires before the dom updates\r\n  getSnapshotBeforeUpdate(prevProps, prevState){\r\n    console.log(' getSnapshotBeforeUpdate');\r\n  }\r\n */\r\n\r\n\r\n\r\n  render() {\r\n      const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { Provider } from './context';\n//Components\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\n\n\n\nclass App extends React.Component {\n  render(){\n    return ( \n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n\n                <Route component={NotFound} />\n\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}